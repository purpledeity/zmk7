#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>

// Home row mods macro
#define HRML(k2,k3,k4) &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
#define HRMR(k1,k2,k3) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3

#define BASE 0
#define LOWER 1
#define RAISE 2
#define TRI 3
#define NUMB 4
#define GAME 5
/ {
        conditional_layers {
            compatible = "zmk,conditional-layers";
            tri_layer {
                if-layers = <LOWER RAISE>;
                then-layer = <TRI>;
            };
        };     

        behaviors {
                ht: hold_tap {
                        label = "hold_tap";
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        flavor = "tap-preferred";
                        tapping-term-ms = <220>;
                        quick-tap-ms = <150>;
                         global-quick-tap;
                        bindings = <&kp>, <&kp>;
                };
        };
        behaviors {
                lt_impl: layer-tap-by-hold-tap {
                compatible = "zmk,behavior-hold-tap";
                label = "LAYER_TAP_BY_HOLD_TAP";
                #binding-cells = <2>;
                tapping-term-ms = <200>;
                quick-tap-ms = <0>;
                flavor = "tap-preferred";
                bindings = <&mo>, <&kp>;
                };
        };

        combos {
            compatible = "zmk,combos";
            combo_exit_game_layer {
                timeout-ms = <50>;
                layers = <GAME>; // only on game layer
                key-positions = <0 11>; // top left and top right keys
                bindings = <&tog GAME>; // toggle game layer off
                };
        };

        combos {
	    compatible = "zmk,combos";
	    combo_numb_layer {
		timeout-ms = <50>;
		key-positions = <16 38>;
		bindings = <&mo NUMB>;
                };
        };

        keymap {
                compatible = "zmk,keymap";
                default_layer {
                         bindings = <
                // ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮       ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
                // |  TAB     |  Q       |  W       |  D       |  F       |  K       |       |  J       |  U       |  R       |  L       |  ;       |  '       |
                     &kp TAB    &kp Q      &kp W      &kp D      &kp F      &kp K              &kp J      &kp U      &kp R      &kp L      &kp SEMI   &kp SQT
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // |  CTRL    |  A       |  S       |  E       |  T       |  G       |       |  Y       |  N       |  I       |  O       |  H       |  BSPC    |
                     &kp LCTRL  &kp A      HRML(S,    E,         T)         &kp G              &kp Y      HRML(N,    I,         O)         &kp H      &kp BSPC
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // |  SHFT    |  Z       |  X       |  C       |  V       |  B       |       |  P       |  M       |  ,       |  .       |  /       |  ESC     |
                     &kp LSHFT  &kp Z      &kp X      &kp C      &kp V      &kp B              &kp P      &kp M      &kp COMMA  &kp DOT    &kp FSLH   &kp ESC
                // ╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤       ├──────────┴──────────┴──────────┼──────────┼──────────┼──────────╯
                //                                  |  GUI     |  LWR     |  SPC     |       |  ENT     |  RSE     |  ALT     |
                                                      &kp LGUI   &mo 1      &kp SPACE          &kp RET    &mo 2      &kp RALT
                //                                  ╰──────────┴──────────┴──────────╯       ╰──────────┴──────────┴──────────╯
                        >;
                };

        lower_layer {
                        bindings = <

                // ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮       ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
                // |          |  1       |  2       |  3       |  4       |  5       |       |  6       |  7       |  8       |  9       |  0       |          |
                      &trans    &kp N1     &kp N2     &kp N3     &kp N4     &kp N5             &kp N6     &kp N7     &kp N8     &kp N9     &kp N0     &trans
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // |          |          |  NLCK    |  HOME    |  PGUP    |  PRSQ    |       |          |  left    |  right   |  DWN     |  UP      |  delete  |
                      &trans    &trans    &kp KP_NUM  &kp HOME   &kp PG_UP  &kp PSCRN          &trans     &kp LEFT   &kp RIGHT  &kp DOWN   &kp UP     &kp DEL
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // |          |          |  CLCK    |  END     |  PGDN    |  SLCK    |       |          |          |          |          |          |          |
                      &trans    &trans     &kp CLCK   &kp END    &kp PG_DN  &kp SLCK           &trans     &trans     &trans     &trans     &trans     &trans
                // ╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤       ├──────────┴──────────┴──────────┼──────────┼──────────┼──────────╯
                //                                  |          |          |          |       |          |          |          |
                                                      &trans     &trans     &trans             &trans     &trans     &trans
                //                                  ╰──────────┴──────────┴──────────╯       ╰──────────┴──────────┴──────────╯
                        >;
                };


        raise_layer {
                        bindings = <
                // ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮       ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
                // |          |  !       |  @       |  #       |  $       |  %       |       |  ^       |  &       |  *       |  -       |  +       |          |
                      &trans    &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT          &kp CARET  &kp AMPS   &kp STAR   &kp MINUS  &kp PLUS   &trans
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // |          |          |  ~       |  (       | {        |  [       |       |  ]       |  }       |  )       |  _       |  =       |          |
                      &trans    &kp GRAVE  &kp TILDE  &kp LPAR  &kp LBRC   &kp LBKT            &kp RBKT   &kp RBRC   &kp RPAR   &kp UNDER  &kp EQUAL  &trans
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // |          |          |          |          |          |  "|"     |       |          |          |          |          |          |          |
                      &trans    &trans     &trans     &trans     &trans     &kp PIPE           &trans     &trans     &trans     &trans     &trans     &trans
                // ╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤       ├──────────┴──────────┴──────────┼──────────┼──────────┼──────────╯
                //                                  |          |          |          |       |          |          |          |
                                                      &trans     &trans     &trans             &trans     &trans     &trans
                //                                  ╰──────────┴──────────┴──────────╯       ╰──────────┴──────────┴──────────╯
                        >;
                };
                
        tri_layer {
                        bindings = < 
                // ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮       ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
                // |  F1      |  F2      |  F3      |  F4      |  F5      |  F6      |       |  F7      |  F8      |  F9      |  F10     |  F11     |  F1      |
                     &kp F1     &kp F2     &kp F3     &kp F4     &kp F5     &kp F6             &kp F7     &kp F8     &kp F9     &kp F10    &kp F11    &kp F12
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // |  BTCLR   |  BT1     |  BT2     |  BT3     | BT4      |  BT5     |       |  PREV    |  PLAY    |  NEXT    |  VO-     |  VO+     |          |
                   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &kp C_PREV &kp C_PP &kp C_NEXT &kp C_VOLUME_DOWN &kp C_VOL_UP &trans
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // |          |          |  '       |  "       |          |          |       |  GAME    |          |          |          |          |          |
                     &trans     &out OUT_USB &out OUT_BLE &trans &trans     &trans             &tog GAME  &trans     &trans     &trans     &trans     &trans
                // ╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤       ├──────────┴──────────┴──────────┼──────────┼──────────┼──────────╯
                //                                  |          |          |          |       |          |          |          |
                                                      &trans     &trans     &trans             &trans     &trans     &trans
                //                                  ╰──────────┴──────────┴──────────╯       ╰──────────┴──────────┴──────────╯
                        >;
                };


        numb_layer {
                        bindings = <
                // ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮       ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
                // |          |          |          |          |          |          |       |  N lock  |  N1      |  N2      |  N3      |          |          |
                      &trans     &trans     &trans     &trans     &trans     &trans            &kp kp_NUM &kp kp_N1   &kp kp_N2  &kp kp_N3  &trans    &trans
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // |          |          |          |          |          |          |       |  Click   |  N4      |  N5      |  N6      |          |          |
                      &trans     &trans     &trans     &trans     &trans     &trans            &mkp MB1   &kp kp_N4  &kp kp_N5  &kp kp_N6  &trans     &trans
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // |          |          |          |          |          |          |       |  Middle  |  N7      |  N8      |  N9      |  N0      |          |
                      &trans    &trans     &trans     &trans     &trans     &trans             &mkp MB3   &kp kp_N7  &kp_N8     &kp kp_N9  &kp kp_N0  &trans
                // ╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤       ├──────────┴──────────┴──────────┼──────────┼──────────┼──────────╯
                //                                  |          |          |          |       |          |          |          |
                                                      &trans     &trans     &trans             &trans     &trans     &trans
                //                                  ╰──────────┴──────────┴──────────╯       ╰──────────┴──────────┴──────────╯
                        >;
                };
                
        game_layer {
                        bindings = <
                // qwerty layer for gaming; exit by TAB + sql
                // ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮       ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
                // |          |  Q       |  W       |  D       |  F       |  K       |       |  J       |  U       |  R       |  L       |  ;       |          |
                     &trans     &kp Q      &kp W      &kp E      &kp R      &kp T              &kp Y      &kp U      &kp I      &kp O      &kp P      &trans
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // |  CTRL    |  A       |  S       |  E       |  T       |  G       |       |  Y       |  N       |  I       |  O       |  H       |          |
                     &trans     &kp A      &kp S      &kp D      &kp F      &kp G              &kp H     &kp J       &kp K      &kp L      &kp SEMI   &trans
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // |  SHFT    |  Z       |  X       |  C       |  V       |  B       |       |  P       |  M       |  ,       |  .       |  /       |          |
                     &trans     &kp Z      &kp X      &kp C      &kp V      &kp B              &kp N      &kp M      &kp COMMA  &kp DOT    &kp FSLH   &trans
                // ╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤       ├──────────┴──────────┴──────────┼──────────┼──────────┼──────────╯
                //                                  |          |  ESC     |  SPC     |       |  ENT     |  RSE     |  ALT     |
                                                      &trans     &kp ESC    &trans             &trans     &trans     &trans
                //                                  ╰──────────┴──────────┴──────────╯       ╰──────────┴──────────┴──────────╯
                        >;
                }; 
        };
};
