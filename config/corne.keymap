#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>

// Home row mods macro
#define HRML(k2,k3,k4) &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
#define HRMR(k1,k2,k3) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3
#define WHRML(k2,k3,k4) &ht LALT k2  &ht LGUI k3  &ht LCTRL k4
#define WHRMR(k1,k2,k3) &ht RCTRL k1  &ht RGUI k2  &ht RALT k3

#define BASE 0
#define LOWER 1
#define RAISE 2
#define TRI 3
#define GAME 4
/ {
        conditional_layers {
            compatible = "zmk,conditional-layers";
            tri_layer {
                if-layers = <LOWER RAISE>;
                then-layer = <TRI>;
            };
        };     

        behaviors {
                ht: hold_tap {
                        label = "hold_tap";
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        flavor = "tap-preferred";
                        tapping-term-ms = <220>;
                        quick-tap-ms = <150>;
                         global-quick-tap;
                        bindings = <&kp>, <&kp>;
                };
        };

        combos {
            compatible = "zmk,combos";
            combo_exit_game_layer {
                timeout-ms = <50>;
                layers = <GAME>; // only on game layer
                key-positions = <0 11>; // top left and top right keys
                bindings = <&tog GAME>; // toggle game layer off
            };
        };

        keymap {
                compatible = "zmk,keymap";
                default_layer {
                         bindings = <
// ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮       ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
// |  TAB     |  Q       |  W       |  D       |  F       |  K       |       |  J       |  U       |  R       |  L       |  ;       |  '       |
     &kp TAB    &kp Q      &kp W      &kp D      &kp F      &kp K              &kp J      &kp U      &kp R      &kp L      &kp SEMI   &kp BSPC
// ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
// |  CTRL    |  A       |  S       |  E       |  T       |  G       |       |  Y       |  N       |  I       |  O       |  H       |  BSPC    |
     &kp LCTRL  &kp A      HRML(S,    E,         T)         &kp G              &kp Y      HRML(N,    I,         O)         &kp H      &kp BSPC
// ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
// |  SHFT    |  Z       |  X       |  C       |  V       |  B       |       |  P       |  M       |  ,       |  .       |  /       |  ESC     |
     &kp LSHFT  &kp Z      &kp X      &kp C      &kp V      &kp B              &kp P      &kp M      &kp COMMA  &kp DOT    &kp FSLH   &kp ESC
// ╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤       ├──────────┴──────────┴──────────┼──────────┼──────────┼──────────╯
//                                  |  GUI     |  LWR     |  SPC     |       |  ENT     |  RSE     |  ALT     |
                                      &kp LGUI   &mo 1      &kp SPACE          &kp RET    &mo 2      &kp RALT
//                                  ╰──────────┴──────────┴──────────╯       ╰──────────┴──────────┴──────────╯
                        >;
                };

        lower_layer {
                         bindings = <
// ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮       ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
// |          |  1       |  2       |  3       |  4       |  5       |       |  6       |  7       |  8       |  9       |  0       |          |
      &trans    &kp N1     &kp N2     &kp N3     &kp N4     &kp N5             &kp N6     &kp N7     &kp N8     &kp N9     &kp N0     &trans
// ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
// |          |          |  NLCK    |  HOME    |  PGUP    |  PSCRN   |       |          |  left    |  right   |  DWN     |  UP      |          |
      &trans    &trans    &kp KP_NUM  &kp HOME   &kp PG_UP  &kp PSCRN          &trans     &kp left   &kp right  &kp DOWN   &kp UP     &trans
// ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
// |          |          |  CLCK    |  END     |  PGDN    |  SLCK    |       |  CUT     |  CPY     |  PST     |          |          |          |
      &trans    &trans     &kp CLCK   &kp END    &kp PG_DN  &kp SLCK          &kp K_CUT  &kp K_COPY &kp K_PASTE &trans     &trans     &trans
// ╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤       ├──────────┴──────────┴──────────┼──────────┼──────────┼──────────╯
//                                  |          |          |          |       |          |          |          |
                                      &trans     &trans     &trans             &trans     &trans     &trans
//                                  ╰──────────┴──────────┴──────────╯       ╰──────────┴──────────┴──────────╯
                        >;
                };
        };
};
