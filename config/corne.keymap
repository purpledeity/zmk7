#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

// Home row mods macro
#define HRML(k2,k3,k4) &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
#define HRMR(k1,k2,k3) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3

#define BASE 0
#define LOWER 1
#define RAISE 2
#define TRI 3
#define GAME 4
#define NUMB 5
#define BRUSH 6
#define MOUSE 7

&mt {
    tapping-term-ms = <400>;
    require-prior-idle-ms = <500>;
};   

/ {
        conditional_layers {
            compatible = "zmk,conditional-layers";
            tri_layer {
                if-layers = <LOWER RAISE>;
                then-layer = <TRI>;
            };
        };  

        behaviors {
                ht: hold_tap {
                        label = "hold_tap";
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        flavor = "tap-preferred";
                        tapping-term-ms = <220>;
                        quick-tap-ms = <150>;
                        global-quick-tap;
                        bindings = <&kp>, <&kp>;
                };
                
                gresc: grave_escape {
                        compatible = "zmk,behavior-mod-morph";
                        #binding-cells = <0>;
                        retro-tap;
                        bindings = <&kp BSPC>, <&kp DEL>;
                        mods = <(MOD_LALT|MOD_LCTL)>;
                };
                td0: tap_dance_0 {
                        compatible = "zmk,behavior-tap-dance";
                        #binding-cells = <0>;
                        retro-tap;
                        tapping-term-ms = <200>;
                        bindings = <&gresc>, <&kp RET>;
                };
        };

        combos {
            compatible = "zmk,combos";
                combo_exit_game_layer {
                         timeout-ms = <50>;
                        layers = <GAME>; // only on game layer
                        key-positions = <0 11>; // top left and top right keys
                        bindings = <&tog GAME>; // toggle game layer off
                };
                
                combo_NUMB {
                        timeout-ms = <50>;
                        key-positions = <17 38>;
                        bindings = <&mo NUMB>;
                };
        };
        


        keymap {
                compatible = "zmk,keymap"; // rstlne layout 
                default_layer {
                         bindings = <
                // ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮       ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
                // |  TAB     |  Q       |  W       |  D       |  F       |  /       |       |  J       |  U       |  K       |  Y       |  :       |  ESC     |
                     &kp TAB    &kp Q      &kp W      &kp D      &kp F      &kp FSLH           &kp J      &kp U      &kp K      &kp Y      &kp SEMI   &kp ESC
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // |  CTRL    |  A       |  S       |  E       |  T       |  L       |       |  H       |  N       |  R       |  I       |  O       |  BSPC    |
                     &kp LSHFT  &kp A      HRML(S,    E,         T)         &kp L              &kp H      HRML(N,    R,         I)         &kp O      &kp BSPC
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // |  ~       |  G       |  X       |  C       |  V       |  Z       |       |  B       |  M       |  p       |  ,       |  .       |  ~       |
                     &kp TILDE  &kp G      &kp X      &kp C      &kp V      &kp Z              &kp B      &kp M      &kp P      &kp COMMA  &kp DOT    &kp SQT
                // ╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤       ├──────────┴──────────┴──────────┼──────────┼──────────┼──────────╯
                //                                  |  GUI     |  LWR     |  SPC     |       |  ENT     |  RSE     |  ALT     |
                                                      &mo 7      &mo 1    &mt LSHFT SPACE      &td0       &mo 2      &kp RALT
                //                                  ╰──────────┴──────────┴──────────╯       ╰──────────┴──────────┴──────────╯
                        >;
                };

    lower_layer {
                        bindings = <

                // ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮       ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
                // |          |  1       |  2       |  3       |  4       |  5       |       |  6       |  7       |  8       |  9       |  0       |          |
                      &trans    &kp N1     &kp N2     &kp N3     &kp N4     &kp N5             &kp N6     &kp N7     &kp N8     &kp N9     &kp N0     &trans
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // |          |          |          |  HOME    |  PGUP    |  PRSQ    |       |          |  left    |  right   |  DWN     |  UP      |  delete  |
                      &trans    &trans     &trans     &kp HOME   &kp PG_UP  &kp PSCRN          &trans     &kp LEFT   &kp RIGHT  &kp DOWN   &kp UP     &kp DEL
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // |          |          |  CLCK    |  END     |  PGDN    |  SLCK    |       |          |          |          |          |          |          |
                      &trans    &trans     &kp CLCK   &kp END    &kp PG_DN  &kp SLCK           &trans     &trans     &trans     &trans    &trans     &trans
                // ╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤       ├──────────┴──────────┴──────────┼──────────┼──────────┼──────────╯
                //                                  |          |          |          |       |  Enter   |          |          |
                                                      &trans     &trans     &trans           &kp KP_ENTER &trans     &trans
                //                                  ╰──────────┴──────────┴──────────╯       ╰──────────┴──────────┴──────────╯
                        >;
                };


        raise_layer {
                        bindings = <
                // ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮       ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
                // |          |  !       |  @       |  #       |  $       |  %       |       |  ^       |  &       |  *       |  -       |  +       |          |
                      &trans    &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT          &kp CARET  &kp AMPS   &kp STAR   &kp MINUS  &kp PLUS   &trans
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // |          |          |  "|"     |  (       | {        |  [       |       |  ]       |  }       |  )       |  _       |  =       |          |
                      &trans    &kp GRAVE  &kp PIPE   &kp LPAR  &kp LBRC   &kp LBKT            &kp RBKT   &kp RBRC   &kp RPAR   &kp UNDER  &kp EQUAL  &kp NUBS
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // |          |          |          |          |          |          |       |          |          |          |          |          |          |
                      &trans    &trans     &trans     &trans     &trans     &trans             &trans     &trans     &trans     &trans     &trans     &trans
                // ╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤       ├──────────┴──────────┴──────────┼──────────┼──────────┼──────────╯
                //                                  |          |          |          |       |          |          |          |
                                                      &trans     &trans     &trans             &trans     &trans     &trans
                //                                  ╰──────────┴──────────┴──────────╯       ╰──────────┴──────────┴──────────╯
                        >;
                };
                
        tri_layer {
                        bindings = < 
                // ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮       ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
                // |  F1      |  F2      |  F3      |  F4      |  F5      |  F6      |       |  F7      |  F8      |  F9      |  F10     |  F11     |  F1      |
                     &kp F1     &kp F2     &kp F3     &kp F4     &kp F5     &kp F6             &kp F7     &kp F8     &kp F9     &kp F10    &kp F11    &kp F12
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // |  BTCLR   |  BT1     |  BT2     |  BT3     | BT4      |  BT5     |       |  PREV    |  PLAY    |  NEXT    |  VO-     |  VO+     |          |
                   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &kp C_PREV &kp C_PP &kp C_NEXT &kp C_VOLUME_DOWN &kp C_VOL_UP &trans
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // |          |          |  '       |  "       |          |          |       |  GAME    |  brush   |          |          |          |          |
                     &trans   &out OUT_USB &out OUT_BLE &trans   &trans     &trans             &tog GAME  &tog BRUSH  &trans     &trans     &trans     &trans
                // ╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤       ├──────────┴──────────┴──────────┼──────────┼──────────┼──────────╯
                //                                  |          |          |          |       |          |          |          |
                                                      &trans     &trans     &trans             &trans     &trans     &trans
                //                                  ╰──────────┴──────────┴──────────╯       ╰──────────┴──────────┴──────────╯
                        >;
                };

        game_layer {
                        bindings = <
                // qwerty layer for gaming; exit by TAB + sql
                // ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮       ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
                // |          |  Q       |  W       |  D       |  F       |  K       |       |  J       |  U       |  R       |  L       |  ;       |          |
                     &trans     &kp Q      &kp W      &kp E      &kp R      &kp T              &kp Y      &kp U      &kp I      &kp O      &kp P      &trans
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // |  CTRL    |  A       |  S       |  E       |  T       |  G       |       |  Y       |  N       |  I       |  O       |  H       |          |
                     &trans     &kp A      &kp S      &kp D      &kp F      &kp G              &kp H     &kp J       &kp K      &kp L      &kp SEMI   &trans
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // |  SHFT    |  Z       |  X       |  C       |  V       |  B       |       |  P       |  M       |  ,       |  .       |  /       |          |
                     &trans     &kp Z      &kp X      &kp C      &kp V      &kp B              &kp N      &kp M      &kp COMMA  &kp DOT    &kp FSLH   &trans
                // ╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤       ├──────────┴──────────┴──────────┼──────────┼──────────┼──────────╯
                //                                  |  GUI     |  ESC     |  SPC     |       |  ENT     |  RSE     |  ALT     |
                                                      &trans     &kp ESC    &trans             &trans     &trans     &trans
                //                                  ╰──────────┴──────────┴──────────╯       ╰──────────┴──────────┴──────────╯
                        >;
                }; 

        numb_layer {
                        bindings = <
                // ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮       ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
                // |          |          |          |          |          |          |       |  N lock  |  N1      |  N2      |  N3      |          |          |
                      &trans     &trans     &trans     &trans     &trans     &trans            &kp KP_NUM &kp KP_N1  &kp KP_N2  &kp KP_N3  &trans     &trans
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // |          |          |          |          |          |          |       |          |  N4      |  N5      |  N6      |          |          |
                      &trans     &trans     &trans     &trans     &trans     &trans            &trans     &kp KP_N4  &kp KP_N5  &kp KP_N6  &trans     &trans
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // |          |          |          |          |          |          |       |          |  N7      |  N8      |  N9      |  N0      |          |
                      &trans    &trans     &trans     &trans     &trans      &trans            &trans     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_N0  &trans
                // ╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤       ├──────────┴──────────┴──────────┼──────────┼──────────┼──────────╯
                //                                  |          |          |          |       |          |          |          |
                                                      &trans     &trans      &trans            &trans     &trans     &trans
                //                                  ╰──────────┴──────────┴──────────╯       ╰──────────┴──────────┴──────────╯
                        >;
                };
        brush_layer {
			bindings = <
                // ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮       ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
                // |  tab     | transform| focus    | zoom out |  zoom in |  brush   |       |          |          |          |          |          |  toggle  |
                     &kp TAB     &kp T    &kp LC(N0)   &kp LC(MINUS) &kp LC(PLUS)  &kp B       &trans     &trans     &trans     &trans     &trans    &tog BRUSH
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // |  Shift   |swap color|  reset   | Rotate L | Rotate R |  Pen     |       |          |          |          |          |          |          |
                     &kp LSHIFT  &kp X     &kp UP     &kp LEFT   &kp RIGHT  &kp S               &trans     &trans     &trans     &trans     &trans     &trans
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // |  Undo    |  Redo    |          |  copy    |  paste   |  Fill    |       |          |          |          |          |          |          |
                    &kp LC(Z) &kp LC(LS(Z)) &trans    &kp LC(C)  &kp LC(V)  &kp N               &trans     &trans     &trans     &trans     &trans     &trans 
                // ╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤       ├──────────┴──────────┴──────────┼──────────┼──────────┼──────────╯
                //                                  | Prev Pen | Next pen |  space   |       |          |   type   |          | 
                                                      &kp LBKT   &kp RBKT   &kp SPACE           &trans     &mo 0      &trans                     
                //                                  ╰──────────┴──────────┴──────────╯       ╰──────────┴──────────┴──────────╯
                        >;
                };
        mouse_layer {
                        bindings = <
                // ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮       ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
                // |          |          |          |          |          |          |       |          |          |          |          |          |          |
                      &trans     &trans     &trans     &trans     &trans     &trans             &msc MOVE_UP &msc MOVE_LEFT &msc MOVE_RIGHT &trans &trans &trans
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // |          |          |          |          |          |          |       |          |          |          |          |          |          |
                      &trans     &trans     &trans     &trans     &trans     &trans             &msc MOVE_DOWN &mmv MOVE_LEFT &mmv MOVE_RIGHT &mmv MOVE_DOWN &mmv MOVE_UP &trans
                // ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤       ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
                // |          |          |          |          |          |          |       |          |          |          |          |          |          |
                      &trans     &trans     &trans     &trans     &trans     &trans             &trans     &trans     &trans     &trans     &trans     &trans
                // ╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┤       ├──────────┴──────────┴──────────┼──────────┼──────────┼──────────╯
                //                                  |          |          |          |       |          |          |          |
                                                       &trans     &trans     &trans            &mkp LCLK  &mkp RCLK   &trans
                //                                  ╰──────────┴──────────┴──────────╯       ╰──────────┴──────────┴──────────╯
                        >;
                };
        };
};
